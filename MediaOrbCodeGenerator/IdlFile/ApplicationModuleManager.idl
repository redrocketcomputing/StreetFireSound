module ApplicationModuleManager
{
	struct ApplicationModuleProfile
	{
		wstring name;
		wstring manufacture;
		wstring description;
		wstring codeUnitClassName;
		wstring propertiesPath;		
	};
	
	struct ApplicationModuleGuestId
	{
		TargetId targetId;
		wstring url;
	};
	
	typedef ushort ErrorCode;
	const ErrorCode SUCCESS = 0x0000;
	const ErrorCode UNKNOWN_MESSAGE = 0x0001;
	const ErrorCode ACCESS_VIOLATION = 0x0002;
	const ErrorCode UNIDENTIFIED_FAILURE = 0x0003;
	const ErrorCode NOT_IMPLEMENTED = 0x0004;
	const ErrorCode RESERVED = 0x0005;
	const ErrorCode INVALID_PARAMETER = 0x0006;
	const ErrorCode RESOURCE_LIMIT = 0x0007;
	const ErrorCode PARAMETER_SIZE_LIMIT = 0x0008;
	const ErrorCode INCOMPLETE_MESSAGE = 0x0009;
	const ErrorCode INCOMPLETE_RESULT = 0x000a;
	const ErrorCode LOCAL = 0x000b;
	const ErrorCode STANDBY = 0x000c;
	const ErrorCode BAD_GUEST_ID = 0x0080;
	const ErrorCode CLASSLOADER_ERROR = 0x0081;
	const ErrorCode BAD_PROFILE = 0x0082;
	const ErrorCode BAD_LOCATION = 0x0083;

	enum OperationId
	{
		INSTALL,
		UNINSTALL,
		GET_INSTALLED_GUESTS,
		GET_INSTALLED_GUEST_PROFILE
	};
	
	interface ApplicationModuleManager
	{
		void install(in wstring amUrl);
		void uninstall(in ApplicationModuleGuestId guestId);
		sequence<ApplicationModuleGuestId> getInstalledGuests();
		ApplicationModuleProfile getInstalledGuestProfile(in ApplicationModuleGuestId guestId);
	};
	
	interface VendorEvent
	{
		void applicationModuleInstalled(in ApplicationModuleGuestId guestId);
		void applicationModuleUninstalled(in ApplicationModuleGuestId guestId);
	};
};